<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byf.dao.IUserDao">
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.byf.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!-- 配置查询所有 -->
    <select id="findAll" resultType="User" >
        <!-- select id as userId,username as userName, sex as userSex, birthday as userBirthday,address as userAddress from user -->
        select * from user
    </select>

    <select id="findById" parameterType="INT" resultType="User" >
        select * from user
        where id=#{uid}
    </select>

    <select id="findByName" parameterType="string" resultType="com.byf.domain.User" >
        <!--select * from user
        where username like #{userName}
        Preparing: select * from user where username like '%J%'
        Statement 拼接
        -->
        select * from user
        where username like '%${value}%'
        <!-- Preparing: select * from user where username like ?
         PrepareStatement 占位符实现 -->
    </select>
    <select id="findTotal" resultType="int">
        select count(*) from user
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="USER">
        update user set username=#{userName},address=#{userAddress},sex=#{userAex},birthday=#{userBirthday} where id=#{userId}
    </update>

    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

</mapper>