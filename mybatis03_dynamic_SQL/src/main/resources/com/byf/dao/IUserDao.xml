<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byf.dao.IUserDao">
    <!-- 配置查询结果的列名和实体类的属性名对象 -->
    <resultMap id="userMap" type="com.byf.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 其他列的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>

    </resultMap>

    <!-- 抽取重复的sql语句 -->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- 配置查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!-- select id as userId,username as userName, sex as userSex, birthday as userBirthday,address as userAddress from user -->
        select * from user
    </select>
    <insert id="saveUser" parameterType="com.byf.domain.User">
    <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select LAST_INSERT_ID();
        </selectKey>
        insert into user(username,address,sex,birthday)
        values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>
    <update id="updateUser" parameterType="com.byf.domain.User">
        update user
        set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday}
        where id=#{userId}
    </update>
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user
        where id=#{uid}
    </delete>

    <select id="findById" parameterType="INT" resultMap="userMap">
        select * from user
        where id=#{uid}
    </select>

    <select id="findByName" parameterType="string" resultMap="userMap">
        <!--select * from user
        where username like #{userName}
        Preparing: select * from user where username like '%J%'
        Statement 拼接
        -->
        select * from user
        where username like '%${value}%'
        <!-- Preparing: select * from user where username like ?
         PrepareStatement 占位符实现 -->
    </select>
    <select id="findTotal" resultType="int">
        select count(*) from user
    </select>

    <select id="findByQueryVo" parameterType="com.byf.domain.QueryVO" resultMap="userMap">
        <!--select * from user
        where username like #{userName}
        Preparing: select * from user where username like '%J%'
        Statement 拼接
        -->
        select * from user
        where username like #{user.username}
        <!-- Preparing: select * from user where username like ?
         PrepareStatement 占位符实现 -->
    </select>

    <!-- 根据queryVO中的id集合查询用户列表 -->
    <select id="findUserInIds" resultMap="userMap" parameterType="com.byf.domain.QueryVO">
        <!-- select id as userId,username as userName, sex as userSex, birthday as userBirthday,address as userAddress from user -->
        <include refid="defaultUser"></include>
        <where>
            <!-- 入参中的属性要使用Bean的属性，保持大小写一致 -->
            <if test="ids != null and ids.size() > 0">
               <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                   #{uid}
               </foreach>
            </if>
        </where>
    </select>

    <!-- 配置查询所有 -->
    <select id="findAllByCondition" resultMap="userMap" parameterType="com.byf.domain.User">
        <!-- select id as userId,username as userName, sex as userSex, birthday as userBirthday,address as userAddress from user -->
        select * from user
        <where>
            <!-- 入参中的属性要使用Bean的属性，保持大小写一致 -->
            <if test="userName != null">
                and username = #{userName}
            </if>
        </where>
    </select>
</mapper>